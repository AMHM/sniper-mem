#ifndef __MESSAGE_TYPES_H__
#define __MESSAGE_TYPES_H__

#include "fixed_types.h"

// Different types of messages that get passed to the MCP
typedef enum
{
   MCP_MESSAGE_QUIT,
   MCP_MESSAGE_SYS_CALL,
   MCP_MESSAGE_MUTEX_INIT,
   MCP_MESSAGE_MUTEX_LOCK,
   MCP_MESSAGE_MUTEX_UNLOCK,
   MCP_MESSAGE_COND_INIT,
   MCP_MESSAGE_COND_WAIT,
   MCP_MESSAGE_COND_SIGNAL,
   MCP_MESSAGE_COND_BROADCAST,
   MCP_MESSAGE_BARRIER_INIT,
   MCP_MESSAGE_BARRIER_WAIT,
   MCP_MESSAGE_UTILIZATION_UPDATE,
   MCP_MESSAGE_THREAD_SPAWN_REQUEST_FROM_REQUESTER,
   MCP_MESSAGE_THREAD_SPAWN_REPLY_FROM_SLAVE,
   MCP_MESSAGE_THREAD_EXIT,
   MCP_MESSAGE_THREAD_JOIN_REQUEST,
   MCP_MESSAGE_CLOCK_SKEW_MINIMIZATION,
   MCP_MESSAGE_RESET_CACHE_COUNTERS,
   MCP_MESSAGE_DISABLE_CACHE_COUNTERS,
   MCP_MESSAGE_MAGIC,
} MCPMessageTypes;

typedef enum
{
   LCP_MESSAGE_QUIT,
   LCP_MESSAGE_COMMID_UPDATE,
   LCP_MESSAGE_QUIT_THREAD_SPAWNER,
   LCP_MESSAGE_QUIT_THREAD_SPAWNER_ACK,
   LCP_MESSAGE_SIMULATOR_FINISHED,
   LCP_MESSAGE_SIMULATOR_FINISHED_ACK,
   LCP_MESSAGE_THREAD_SPAWN_REQUEST_FROM_MASTER,
   LCP_MESSAGE_CLOCK_SKEW_MINIMIZATION,
   LCP_MESSAGE_MAGIC,
   LCP_MESSAGE_ACK,
} LCPMessageTypes;

typedef enum
{
   LCP_MAGIC_CMD_PERFORMANCE_ENABLE,
   LCP_MAGIC_CMD_PERFORMANCE_DISABLE,
   LCP_MAGIC_CMD_SET_FREQUENCY,
   LCP_MAGIC_CMD_KILL_THREAD,
   LCP_MAGIC_CMD_INSTRUMENT_MODE,
} LCPMagicCmdTypes;

typedef enum
{
   LCP_MAGIC_OPT_INSTRUMENT_DETAILED,
   LCP_MAGIC_OPT_INSTRUMENT_WARMUP,
   LCP_MAGIC_OPT_INSTRUMENT_FASTFORWARD,
} LCPMagicOptTypes;

typedef struct
{
   int32_t lcp_cmd;
   uint64_t cmd;
   uint64_t arg0;
   uint64_t arg1;
} LCPMessageMagic;

#endif

